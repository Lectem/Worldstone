sudo: false
language: cpp

os:
  - osx

env:
  - BUILD_TYPE=Debug
  - BUILD_TYPE=Release

matrix:
  include:
    - os: linux
      compiler: gcc
      addons: {apt: {packages: [g++-6] , sources: [ubuntu-toolchain-r-test]}}
      env: BUILD_TYPE=Debug COMPILER_VER=6
    - os: linux
      compiler: gcc
      addons: {apt: {packages: [g++-6] , sources: [ubuntu-toolchain-r-test]}}
      env: BUILD_TYPE=Release COMPILER_VER=6
    - os: linux
      compiler: clang
      addons: {apt: {packages: [clang-3.8] , sources: [ubuntu-toolchain-r-test,llvm-toolchain-precise-3.8]}}
      env: BUILD_TYPE=Debug COMPILER_VER=3.8
    - os: linux
      compiler: clang
      addons: {apt: {packages: [clang-3.8] , sources: [ubuntu-toolchain-r-test,llvm-toolchain-precise-3.8]}}
      env: BUILD_TYPE=Release COMPILER_VER=3.8


cache:
  directories:
    - $HOME/.local

install:
  - if [[ "${COMPILER_VER}" != "" ]]; then export CXX=${CXX}-${COMPILER_VER}; fi
  - if [[ "${COMPILER_VER}" != "" ]]; then export CC=${CC}-${COMPILER_VER}; fi
  - |
    if [[ "${TRAVIS_OS_NAME}" == "linux" ]]; then
      mkdir -p $HOME/.local

      CMAKE_URL="http://cmake.org/files/v3.6/cmake-3.6.2-Linux-x86_64.tar.gz"
      if [ ! -e $HOME/.local/bin/cmake ]; then
          echo "CMake not found in the cache, get and extract it..."
          travis_retry curl -L ${CMAKE_URL} \
              | tar -xz -C $HOME/.local --strip-components=1
      else
          echo "Using cached CMake"
      fi
    else
      if ! brew ls --version cmake &>/dev/null; then brew install cmake; fi
    fi

script:
  - mkdir build && cd build
  - cmake -DCMAKE_BUILD_TYPE=$BUILD_TYPE ..
  - make -j4
